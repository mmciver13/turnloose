<!-- /snippets/product.liquid -->

<div itemscope itemtype="http://schema.org/Product" class="product-page">

  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
  <meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">
  <meta itemprop="price" content="{{ product.price | money }}">

  <header class="row row-fullwidth tl-hero tl-product-hero fadein-1">
    <div class="tl-product-img fadein-3">
      <div class="product-single__photos" id="ProductPhoto">
        {% for image in product.images %}
          <div class="product-single__photo__wrapper">
            <img src="{{ image.src | img_url: '1024x1024' }}" alt="{{ image.alt | escape }}" >
          </div>
        {% endfor %}
      </div>
    </div>
  </header>

  <div class="row row-fullwidth">
    <div class="col-full content tl-product-desc">
      <div class="tl-three-quarter-width">
        <h1 itemprop="name">{{ product.title }}</h1>
        <h2 id="ProductPrice">{{ product.price | money }}</h2>
        <p class="tl-product-excerpt" itemprop="description">
          {{ product.description }}
        </p>
      </div>
    </div><!-- /product desc -->

    <!-- add to cart + variants -->
    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer" class="tl-precheck">
      {% comment %}
        Get first variant, or deep linked one
      {% endcomment %}
      {% assign variant = product.selected_or_first_available_variant %}

      <meta itemprop="priceCurrency" content="{{ shop.currency }}">

      <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">

      <form action="{{ form_action }}" method="{{form_method}}" enctype="multipart/form-data" id="{{form_id}}" class="{{form_class}}">
        {% if include_customer_id %}
          <input type="hidden" name="customer_id" value="{{customer.id}}"></input>
        {% endif %}

        <select name="id" id="productSelect" class="product-single__variants">
          {% for variant in product.variants %}
            {% if variant.available %}

              <option {% if variant == product.selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}" data-sku="{{ variant.sku }}">{{ variant.title }}</option>

            {% else %}
              <option disabled="disabled">
                {{ variant.title }} - {{ 'products.product.sold_out' | t }}
              </option>
            {% endif %}
          {% endfor %}
        </select>
        {% if show_quantity %}
        <div class="tl-quantity-selector text-center">
          <label for="Quantity" class="quantity-selector uppercase">{{ 'products.product.quantity' | t }}</label>
          <input type="number" id="Quantity" name="quantity" value="1" min="1" class="quantity-selector">
        </div>
        {% endif %}
        <div class="tl-add-to-cart">
          <button type="submit" name="add" id="AddToCart">
            <span id="AddToCartText">{{ 'products.product.add_to_cart' | t }} </span>
          </button>
        </div>
      </form>
    </div><!-- /add to cart + offers -->

  </div><!-- /row -->

  {% if settings.related_products_enable %}
    {% include 'product-related-items' %}
  {% endif %}

</div>

<!-- ---------------------------------- -->

{% comment %}
  To take advantage of a callback on the select dropdown, add option_selection.js
  and customize the JS in timber.productPage as needed.

  Currently, timber.productPage does the following:
    - Hides your <select> tag from above
    - Breaks out the product variants into separate product options, if more than one exists
    - Generates a <select> tag for each product option
    - Enables/disables elements based on variant availability

  Callback notes:
    - Keep the callback available to the global scope (window.selectCallback) so that advanced
      addons can override it.
      * E.g. multiple currencies http://docs.shopify.com/manual/configuration/store-customization/currencies-and-translations/currencies/how-to-toggle-between-two-currencies
{% endcomment %}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}

<script>
  jQuery(function($) {
    $('.product-single__photos').slick({
      dots: true,
      adaptiveHeight: true
    });

    new Shopify.OptionSelectors('productSelect', {
      product: {{ product | json }},
      onVariantSelected: selectCallback,
      enableHistoryState: true
    });

    // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
    {% if product.options.size == 1 and product.options.first != 'Title' %}
      $('.selector-wrapper:eq(0)').prepend('<label for="productSelect-option-0">{{ product.options.first | escape }}</label>');
    {% endif %}

    // Hide selectors if we only have 1 variant and its title contains 'Default'.
    {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
      $('.selector-wrapper').hide();
    {% endif %}
  });
</script>
